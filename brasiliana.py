# -*- coding: utf-8 -*-
"""Brasiliana.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CQHctxFm0g84GbjjUHYgnKTQStwD6Moy

**Brasiliana Digital** - Código
"""

import os
from requests_html import HTMLSession

# Defining default user agent and creating an HTML session
DEFAULT_USER_AGENT = 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36'
session = HTMLSession()
headers = {'User-Agent': DEFAULT_USER_AGENT}

# Setting start value
start = 0

# Defining function to set up the URL for a given obra_id and page index
def setup_url(obra_id, index):
    page = start + index
    url = f'http://brasilianadigital.com.br/uploads/obras/{obra_id}/img/{obra_id}-2-{page}.jpg'
    return url

# Defining function to download an image given its URL, page number, and obra_id
def download_image(obra_id, url, page):
    response = session.get(url, headers=headers)
    response.html.render()
    img = response.html.find('img')
    print("Baixando Página: ", page)
    with open(f'./brasiliana/{obra_id}/page-{str(page).zfill(3)}.jpg', 'wb') as w:
        w.write(response.content)

# Defining function to get the total number of pages for a given obra_id
def get_total_pages(obra_id):
    index = 1
    while True:
        url = setup_url(obra_id, index)
        response = session.get(url, headers=headers)
        if response.status_code == 404:
            break
        index += 1
    return index - 1

# Defining function to download all pages of a given obra_id, creating a folder for it if necessary
def download_book(obra_id):
    output_folder = f'./brasiliana/{obra_id}'
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)

    pagesWithError = []
    total_pages = get_total_pages(obra_id)

    for index in range(1, total_pages + 1):
        url = setup_url(obra_id, index)
        try:
            download_image(obra_id, url, index)
        except Exception as e:
            print(e)
            pagesWithError.append(index)

    print("\n\nPáginas com erro: ", pagesWithError)
    print("\n")

    while len(pagesWithError) > 0:
        print("Número de páginas restantes: ", len(pagesWithError))
        index = pagesWithError.pop()
        url = setup_url(obra_id, index)
        try:
            download_image(obra_id, url, index)
        except Exception as e:
            pagesWithError.append(index)

# Main loop for downloading multiple books
for obra_id in range(447, 500):  # Replace 11 with the number of books you want to download + 1
    print(f"Baixando livro {obra_id}")
    try:
        download_book(obra_id)
    except Exception as e:
        print(f"Erro ao baixar o livro {obra_id}: {e}")
        # Save the error to a log file or other method if desired

